{"version":3,"sources":["webpack://@jordanjay29/flarum-ext-summaries/webpack/bootstrap","webpack://@jordanjay29/flarum-ext-summaries/external \"flarum.core.compat['app']\"","webpack://@jordanjay29/flarum-ext-summaries/external \"flarum.core.compat['extend']\"","webpack://@jordanjay29/flarum-ext-summaries/external \"flarum.core.compat['components/DiscussionList']\"","webpack://@jordanjay29/flarum-ext-summaries/external \"flarum.core.compat['components/DiscussionListItem']\"","webpack://@jordanjay29/flarum-ext-summaries/external \"flarum.core.compat['utils/string']\"","webpack://@jordanjay29/flarum-ext-summaries/./src/forum/index.js","webpack://@jordanjay29/flarum-ext-summaries/./src/forum/addSummaryExcerpt.js"],"names":["enumerable","get","getter","value","key","bind","module","Object","prototype","hasOwnProperty","call","object","property","exports","flarum","core","compat","app","initializers","add","extend","DiscussionList","params","include","push","DiscussionListItem","items","firstPost","this","attrs","discussion","excerptLength","forum","attribute","excerpt","truncate","contentPlain"],"mappings":"2BACA,SAGA,cAGA,QACA,oBAGA,YACA,IACA,KACA,YAUA,OANA,mCAGA,OAGA,UA0DA,OArDA,MAGA,MAGA,oBACA,UACA,2BAA2CA,YAAY,EAAMC,IAAKC,KAKlE,gBACA,gDACA,4CAAyDC,MAAO,WAEhE,sCAAkDA,OAAO,KAQzD,kBAEA,GADA,cACA,aACA,qDACA,0BAGA,GAFA,OACA,mCAA0CH,YAAY,EAAMG,MAAOA,IACnE,2DAAiH,OAAOA,EAAMC,IAAQC,KAAK,KAAMD,IACjJ,UAIA,gBACA,sBACA,WAA4B,OAAOE,EAAgB,SACnD,WAAkC,OAAOA,GAEzC,OADA,aACA,GAIA,kBAAuD,OAAOC,OAAOC,UAAUC,eAAeC,KAAKC,EAAQC,IAG3G,OAIA,S,gBClFAN,EAAOO,QAAUC,OAAOC,KAAKC,OAAY,K,cCAzCV,EAAOO,QAAUC,OAAOC,KAAKC,OAAe,Q,cCA5CV,EAAOO,QAAUC,OAAOC,KAAKC,OAAO,8B,cCApCV,EAAOO,QAAUC,OAAOC,KAAKC,OAAO,kC,cCApCV,EAAOO,QAAUC,OAAOC,KAAKC,OAAO,iB,wGCKpCC,IAAIC,aAAaC,IAAI,yBAAyB,WCE5CC,iBAAOC,IAAeb,UAAW,iBAAiB,SAASc,GACzDA,EAAOC,QAAQC,KAAK,gBAGtBJ,iBAAOK,IAAmBjB,UAAW,aAAa,SAASkB,GACzD,IAEMC,EAFaC,KAAKC,MAAMC,WAEDH,YACvBI,EAAgBd,IAAIe,MAAMC,UAAU,wCAA0C,IAEpF,GAAIN,EAAW,CACb,IAAMO,EAAU,cAAOC,mBAASR,EAAUS,eAAgBL,IAE1DL,EAAMP,IAAI,UAAWe,GAAU","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['components/DiscussionList'];","module.exports = flarum.core.compat['components/DiscussionListItem'];","module.exports = flarum.core.compat['utils/string'];","import { extend, notificationType } from 'flarum/extend';\nimport app from 'flarum/app';\n\nimport addSummaryExcerpt from './addSummaryExcerpt';\n\napp.initializers.add('jordanjay29-summaries', () => {\n  addSummaryExcerpt();\n});\n","import { extend } from 'flarum/extend';\nimport app from 'flarum/app';\nimport DiscussionList from 'flarum/components/DiscussionList';\nimport DiscussionListItem from 'flarum/components/DiscussionListItem';\nimport { truncate } from 'flarum/utils/string';\n\nexport default function addSummaryExcerpt() {\n  extend(DiscussionList.prototype, 'requestParams', function(params) {\n    params.include.push('firstPost');\n  });\n\n  extend(DiscussionListItem.prototype, 'infoItems', function(items) {\n    const discussion = this.attrs.discussion;\n\n    const firstPost = discussion.firstPost();\n    const excerptLength = app.forum.attribute('flarum-ext-summaries.excerpt_length') || 200;\n\n    if (firstPost) {\n      const excerpt = <span>{truncate(firstPost.contentPlain(), excerptLength)}</span>;\n\n      items.add('excerpt', excerpt, -100);\n    }\n  });\n}\n"],"sourceRoot":""}