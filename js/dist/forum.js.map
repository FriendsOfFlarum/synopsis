{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@ianm/synopsis/webpack/bootstrap","webpack://@ianm/synopsis/webpack/runtime/compat get default export","webpack://@ianm/synopsis/webpack/runtime/define property getters","webpack://@ianm/synopsis/webpack/runtime/hasOwnProperty shorthand","webpack://@ianm/synopsis/external root \"flarum.core.compat['forum/app']\"","webpack://@ianm/synopsis/external root \"flarum.core.compat['common/extend']\"","webpack://@ianm/synopsis/external root \"flarum.core.compat['forum/states/DiscussionListState']\"","webpack://@ianm/synopsis/external root \"flarum.core.compat['forum/components/DiscussionListItem']\"","webpack://@ianm/synopsis/external root \"flarum.core.compat['common/utils/string']\"","webpack://@ianm/synopsis/external root \"flarum.core.compat['tags/models/Tag']\"","webpack://@ianm/synopsis/external root \"flarum.core.compat['common/Model']\"","webpack://@ianm/synopsis/external root \"flarum.core.compat['forum/components/SettingsPage']\"","webpack://@ianm/synopsis/external root \"flarum.core.compat['common/components/FieldSet']\"","webpack://@ianm/synopsis/external root \"flarum.core.compat['common/utils/ItemList']\"","webpack://@ianm/synopsis/external root \"flarum.core.compat['common/components/Switch']\"","webpack://@ianm/synopsis/external root \"flarum.core.compat['common/utils/Stream']\"","webpack://@ianm/synopsis/./src/forum/index.ts","webpack://@ianm/synopsis/./src/forum/addSummaryExcerpt.tsx","webpack://@ianm/synopsis/./src/forum/addUserPreference.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/DiscussionListState'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionListItem'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/string'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['tags/models/Tag'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/SettingsPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/FieldSet'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Switch'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/Stream'];","import app from 'flarum/forum/app';\n\nimport addSummaryExcerpt from './addSummaryExcerpt';\nimport addUserPreference from './addUserPreference';\n\napp.initializers.add('ianm-synopsis', () => {\n  addSummaryExcerpt();\n  addUserPreference();\n});\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport DiscussionListState from 'flarum/forum/states/DiscussionListState';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\nimport { truncate } from 'flarum/common/utils/string';\nimport ItemList from 'flarum/common/utils/ItemList';\n/* @ts-ignore */\nimport Tag from 'flarum/tags/models/Tag';\nimport Model from 'flarum/common/Model';\nimport type Mithril from 'mithril';\n\nexport default function addSummaryExcerpt() {\n  if (app.initializers.has('flarum-tags')) {\n    Tag.prototype.richExcerpts = Model.attribute('richExcerpts');\n    Tag.prototype.excerptLength = Model.attribute('excerptLength');\n  }\n\n  extend(DiscussionListState.prototype, 'requestParams', function (params: any) {\n    if (app.forum.attribute('synopsis.excerpt_type') === 'first') params.include.push('firstPost');\n    else params.include.push('lastPost');\n  });\n\n  extend(DiscussionListItem.prototype, 'infoItems', function (items: ItemList<Mithril.Children>) {\n    // Skip if we are searching to preserve most relevant post content as excerpt,\n    // that way we also preserve highlighting of search terms in the most relevant post.\n    if (app.forum.attribute('synopsis.disable_when_searching') && app.discussions.params.q) return;\n\n    const discussion = this.attrs.discussion;\n\n    if (app.session.user && !app.session.user.preferences()?.showSynopsisExcerpts) {\n      return;\n    }\n\n    const tags = discussion.tags();\n    let tag;\n    if (tags) {\n      tag = tags[tags.length - 1];\n    }\n\n    const excerptPost = app.forum.attribute('synopsis.excerpt_type') === 'first' ? discussion.firstPost() : discussion.lastPost();\n    const excerptLength = typeof tag?.excerptLength() === 'number' ? tag?.excerptLength() : app.forum.attribute('synopsis.excerpt_length');\n    const richExcerpt = typeof tag?.richExcerpts() === 'number' ? tag?.richExcerpts() : app.forum.attribute('synopsis.rich_excerpts');\n    const onMobile = app.session.user ? app.session.user.preferences()?.showSynopsisExcerptsOnMobile : false;\n\n    // A length of zero means we don't want a synopsis for this discussion, so do nothing.\n    if (excerptLength === 0) {\n      return;\n    }\n\n    if (!excerptPost?.contentHtml?.()) return;\n    const content = richExcerpt ? m.trust(truncate(excerptPost.contentHtml(), excerptLength)) : truncate(excerptPost.contentPlain(), excerptLength);\n\n    if (excerptPost) {\n      const excerpt = <div>{content}</div>;\n\n      items.add(onMobile ? 'excerptM' : 'excerpt', excerpt, -100);\n    }\n  });\n}\n","import type Mithril from 'mithril';\nimport app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport SettingsPage from 'flarum/forum/components/SettingsPage';\nimport FieldSet from 'flarum/common/components/FieldSet';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Switch from 'flarum/common/components/Switch';\nimport Stream from 'flarum/common/utils/Stream';\n\nexport default function () {\n  extend(SettingsPage.prototype, 'oninit', function () {\n    this.showSynopsisExcerpts = Stream(this.user.preferences().showSynopsisExcerpts);\n    this.showSynopsisExcerptsOnMobile = Stream(this.user.preferences().showSynopsisExcerptsOnMobile);\n  });\n\n  extend(SettingsPage.prototype, 'settingsItems', function (items: ItemList) {\n    items.add(\n      'synopsis',\n      FieldSet.component(\n        {\n          label: app.translator.trans('ianm-synopsis.forum.user.settings.summaries-heading'),\n          className: 'Settings-Synopsis',\n        },\n        this.summariesItems().toArray()\n      )\n    );\n  });\n\n  SettingsPage.prototype['summariesItems'] = function () {\n    const items = new ItemList();\n\n    items.add(\n      'synopsis-excerpts',\n      Switch.component(\n        {\n          state: this.user.preferences().showSynopsisExcerpts,\n          onchange: (value) => {\n            this.showSynopsisExcerptsLoading = true;\n\n            this.user.savePreferences({ showSynopsisExcerpts: value }).then(() => {\n              this.showSynopsisExcerptsLoading = false;\n              m.redraw();\n            });\n          },\n          loading: this.showSynopsisExcerptsLoading,\n        },\n        app.translator.trans('ianm-synopsis.forum.user.settings.show-summaries')\n      )\n    );\n\n    if (this.user.preferences().showSynopsisExcerpts) {\n      items.add(\n        'synopsis-excerpts-mobile',\n        Switch.component(\n          {\n            state: this.user.preferences().showSynopsisExcerptsOnMobile,\n            disabled: !this.user.preferences().showSynopsisExcerpts,\n            onchange: (value) => {\n              this.showSynopsisExcerptsOnMobileLoading = true;\n\n              this.user.savePreferences({ showSynopsisExcerptsOnMobile: value }).then(() => {\n                this.showSynopsisExcerptsOnMobileLoading = false;\n                window.location.reload();\n              });\n            },\n            loading: this.showSynopsisExcerptsOnMobileLoading,\n          },\n          app.translator.trans('ianm-synopsis.forum.user.settings.show-summaries-mobile')\n        )\n      );\n    }\n\n    return items;\n  };\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","app","add","has","Tag","richExcerpts","Model","excerptLength","extend","DiscussionListState","params","attribute","include","push","DiscussionListItem","items","_app$session$user$pre","_tag","_tag2","_tag3","_tag4","_app$session$user$pre2","q","discussion","this","attrs","user","preferences","showSynopsisExcerpts","tag","tags","length","excerptPost","firstPost","lastPost","richExcerpt","onMobile","showSynopsisExcerptsOnMobile","contentHtml","content","m","trust","truncate","contentPlain","excerpt","SettingsPage","Stream","FieldSet","label","trans","className","summariesItems","toArray","_this","ItemList","Switch","state","onchange","value","showSynopsisExcerptsLoading","savePreferences","then","redraw","loading","disabled","showSynopsisExcerptsOnMobileLoading","window","location","reload"],"sourceRoot":""}